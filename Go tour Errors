package main

import (
	"fmt"
	"math"

)

type ErrNegativeSqrt float64

func (e ErrNegativeSqrt) Error() string{
	return fmt.Sprintf("cannot Sqrt negative number: %v", float64(e))
}

func Sqrt(x float64) (float64, error) {
	if x < 0{
		return 0, ErrNegativeSqrt(x)
	}
	z:= 1.0
	const loopNum = 100
	for i:= 0; i <= loopNum; i++{
	if math.Abs(z-(z-(z*z - x) / (2 * z))) < 0.0000000000000005{
		fmt.Printf("Close answer reached in %d steps:\n", i + 1)
		//return z
		break
		
	}else if i == loopNum{
	
	fmt.Println("Loop number exceeded. Last iteration:")
	
	
	}else{
		fmt.Println(z)
		z -= (z*z - x) / (2*z)
		//return z
		}
			
		}
	return z, nil
}

func main() {
	fmt.Println(Sqrt(2))
	fmt.Println(Sqrt(-2))
}